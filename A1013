#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string> 
#include <cstring>
#include <cmath>
#include <map>
#include <unordered_map>
#include <queue>
#include <stack>
#include <set>

using namespace std;

const int maxn = 1010;
int n, m, k, u;
vector<int> G[maxn];
bool visited[maxn] = {false};

void DFS(int i){
	if(i == u) return ;
	visited[i] = true;
	for(int j = 0; j < G[i].size(); j++){
		if(visited[G[i][j]] == false)
			DFS(G[i][j]);
	}
}
int main(){
	scanf("%d%d%d", &n, &m, &k);
	for (int i = 0; i < m; i++){
		int a, b;
		scanf("%d%d", &a, &b);
		G[a].push_back(b);
		G[b].push_back(a);
	}
	while(k--){
		fill(visited, visited + maxn, false);
		scanf("%d", &u);
		int cnt = 0;
		for(int i = 1; i <= n; i++){
			if(i != u && visited[i] == false){
				DFS(i);
				cnt++;
			}
		}
		printf("%d\n", cnt-1);
	}
	return 0;
}
